---
swagger: "2.0"
info:
  description: "IF683 Takí project"
  version: "1.0.0"
  title: "Takí Project"
  contact:
    email: "mvgmb@cin.ufpe.br"
schemes:
- "https"
paths:
  /user:
    get:
      tags:
      - "anyone"
      description: "Gets `User` object."
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/User"
      security:
      - bearerAuth: []
  /user/new:
    post:
      tags:
      - "anyone"
      description: "Posts `User` object"
      parameters:
      - in: "body"
        name: "user"
        description: "`User` object"
        required: true
        schema:
          $ref: "#/definitions/User"
        x-exportParamName: "User"
      responses:
        201:
          description: "Successful response"
          schema:
            type: "string"
            description: "`User`'s id"
      security:
      - bearerAuth: []
  /stores:
    get:
      tags:
      - "anyone"
      description: "Gets all `Store` objects"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Store"
      security:
      - bearerAuth: []
  /product/{productId}:
    get:
      tags:
      - "anyone"
      description: "Gets `Product` object from store"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "productId"
        in: "path"
        description: "Id of product"
        required: true
        type: "string"
        x-exportParamName: "ProductId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Product"
      security:
      - bearerAuth: []
  /store/{storeId}/products:
    get:
      tags:
      - "anyone"
      description: "Gets all `Product` objects from store"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "string"
      security:
      - bearerAuth: []
  /category/{categoryId}:
    get:
      tags:
      - "anyone"
      description: "Gets `Category` object from store"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "categoryId"
        in: "path"
        description: "Id of category"
        required: true
        type: "string"
        x-exportParamName: "CategoryId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Category"
      security:
      - bearerAuth: []
  /store/{storeId}/categories:
    get:
      tags:
      - "anyone"
      description: "Gets all `Category` objects from store"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
      security:
      - bearerAuth: []  
  /store/{storeId}/list/new:
    post:
      tags:
      - "anyone"
      description: "Posts `List` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "list"
        description: "List` object"
        required: true
        schema:
          $ref: "#/definitions/List"
        x-exportParamName: "List"
      responses:
        201:
          description: "Successful response"
          schema:
            type: "string"
            description: "`List`'s id"
      security:
      - bearerAuth: []
  /store/{storeId}/lists:
    get:
      tags:
      - "anyone"
      description: "Gets `List` objects with EMPTY 'Product's field"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of which store's lists to return"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/List"
      security:
      - bearerAuth: []
  /store/{storeId}/list/{listId}:
    get:
      tags:
      - "anyone"
      description: "Gets `List` objects"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "listId"
        in: "path"
        description: "Id of list of products"
        required: true
        type: "string"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/List"
      security:
      - bearerAuth: []
    put:
      tags:
      - "anyone"
      description: "Puts `List` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "listId"
        in: "path"
        description: "Id of list"
        required: true
        type: "string"
        x-exportParamName: "ListId"
      - in: "body"
        name: "list"
        description: "`List` object"
        required: true
        schema:
          $ref: "#/definitions/List"
        x-exportParamName: "List"
      responses:
        202:
          description: "Successful response"
      security:
      - bearerAuth: []
    delete:
      tags:
      - "anyone"
      description: "Deletes `List` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "listId"
        in: "path"
        description: "Id of list to delete"
        required: true
        type: "string"
        x-exportParamName: "ListId"
      responses:
        202:
          description: "Successful response"
      security:
      - bearerAuth: []
  /store/{storeId}/list/{listId}/route:
    get:
      tags:
      - "anyone"
      description: "Gets `MapRoute` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "listId"
        in: "path"
        description: "Id of list of products"
        required: true
        type: "string"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/MapRoute"
      security:
      - bearerAuth: []
  /store/{storeId}/categorylist/{categoryListId}:
    get:
      tags:
      - "anyone"
      description: "Gets `CategoryList` objects"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "categoryListId"
        in: "path"
        description: "Id of list of categories"
        required: true
        type: "string"
        x-exportParamName: "categorylistId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/CategoryList"
      security:
      - bearerAuth: []
    put:
      tags:
      - "anyone"
      description: "Puts `CategoryList` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "categoryListId"
        in: "path"
        description: "Id of categoryList"
        required: true
        type: "string"
        x-exportParamName: "categoryListId"
      - in: "body"
        name: "categoryList"
        description: "`CategoryList` object"
        required: true
        schema:
          $ref: "#/definitions/CategoryList"
        x-exportParamName: "CategoryList"
      responses:
        202:
          description: "Successful response"
      security:
      - bearerAuth: []
    delete:
      tags:
      - "anyone"
      description: "Deletes `CategoryList` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "categoryListId"
        in: "path"
        description: "Id of CategoryList to delete"
        required: true
        type: "string"
        x-exportParamName: "categoryListId"
      responses:
        202:
          description: "Successful response"
      security:
      - bearerAuth: []
  /store/{storeId}/categorylist/{categoryListId}/route:
    get:
      tags:
      - "anyone"
      description: "Gets `MapRoute` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "categoryListId"
        in: "path"
        description: "Id of CategoryList of categories"
        required: true
        type: "string"
        x-exportParamName: "categoryListId"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/MapRoute"
      security:
      - bearerAuth: []
  /store/{storeId}/map:
    get:
      tags:
      - "anyone"
      description: "Gets `Map` object"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "string"
      security:
      - bearerAuth: []
  /store/{storeId}/search/categories/{input}:
    get:
      tags:
      - "anyone"
      description: "Gets possible categories given the users input"
      parameters:
      - name: "storeId"
        in: "path"
        description: "Id of store"
        required: true
        type: "string"
        x-exportParamName: "StoreId"
      - name: "input"
        in: "path"
        description: "User Input"
        required: true
        type: "string"
        x-exportParamName: "Input"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              type: "string"
      security:
      - bearerAuth: []
securityDefinitions:
  bearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific user"
      name:
        type: "string"
        description: "Name of user"
      birthday: # YYYY-MM-DD
        type: "string"
        description: "Birthday of user"
      sex:
        type: "integer"
        description: "Sex of user"
      email:
        type: "string"
        description: "E-mail of user"
      permission:
        type: "string"
        description: "Permission of user"
        enum:
        - "ADMINISTRATOR"
        - "MANAGER"
        - "USER"
  Product:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific Product"
      name:
        type: "string"
        description: "Name of product"
      description:
        type: "string"
        description: "Description of product"
  Category:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific Category"
      name:
        type: "string"
        description: "Name of category"
      image:
        type: "string"
        format: "byte"
        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      description:
        type: "string"
        description: "Description of category"
  List:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific List"
      name:
        type: "string"
        description: "Name of list"
      products:
        type: "array"
        description: "List of Products"
        items:
          $ref: "#/definitions/Product"
  CategoryList:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific CategoryList"
      name:
        type: "string"
        description: "Name of list"
      categories:
        type: "array"
        description: "List of Categories"
        items:
          $ref: "#/definitions/Category"
  Store:
    type: "object"
    properties:
      _id:
        type: "integer"
        description: "Unique identifier representing a specific Store"
      name:
        type: "string"
        description: "Name of store"
      map:
        $ref: "#/definitions/Map"
  Map:
    type: "object"
    properties:
      matrix:
        type: "array"
        items:
          type: "array"
          items:
            $ref: "#/definitions/MapValue"
  MapRoute:
    type: "object"
    properties:
      route:
        type: "array"
        description: "Products route"
        items:
          $ref: "#/definitions/MapValue"
  MapValue:
    type: "object"
    properties:
      category:
        type: "string"
        description: "Category of store"
      aisle:
        type: "integer"
        description: "Aisle of category"
      direction:
        type: "string"
        description: "Direction of aisle"
